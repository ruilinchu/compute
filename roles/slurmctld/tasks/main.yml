- name: install required rpm 
  yum:
    name: 
      - munge
      - munge-devel
      - munge-libs
      - openssl
      - openssl-devel
      - pam-devel
      - perl 
      - perl-ExtUtils-MakeMaker
      - readline-devel 
      - rpm-build 
      - mariadb-server 
      - mariadb-devel
      - policycoreutils
    state: present
    use_backend: yum

- name: start and eable mariadb service
  service: name=mariadb state=started enabled=yes

- stat: path=/etc/munge/munge.key
  register: key

- name: create munge key
  shell: create-munge-key
  when: key.stat.exists == False

- name: fetch munge key to ansible host  
  fetch: src=/etc/munge/munge.key dest={{role_path}}/files/munge.key.{{inventory_hostname}} flat=yes  

- name: start munge service   
  service: name=munge state=started enabled=yes

#- name: check if slurm rpm is installed already
#  shell: rpm -qa | grep slurm-slurmctld-{{ slurm_version}}
#  register: rpmqa

#- debug:
#    var: rpmqa
#    verbosity: 1

- name: copy slurm rpm to host
  copy: src={{ item }} dest=/usr/local/src/   
  with_fileglob:
    - "/usr/local/src/slurm*{{ slurm_version}}*.rpm"
#  when: rpmqa.rc != 0

- name: install slurm rpm
  yum:
    name:
      - "/usr/local/src/slurm-{{ slurm_version}}-1.el7.x86_64.rpm"
      - "/usr/local/src/slurm-pam_slurm-{{ slurm_version}}-1.el7.x86_64.rpm"
      - "/usr/local/src/slurm-libpmi-{{ slurm_version}}-1.el7.x86_64.rpm"
#      - "/usr/local/src/slurm-devel-{{ slurm_version}}-1.el7.x86_64.rpm"
      - "/usr/local/src/slurm-slurmdbd-{{ slurm_version}}-1.el7.x86_64.rpm"
      - "/usr/local/src/slurm-slurmctld-{{ slurm_version}}-1.el7.x86_64.rpm"
      - "/usr/local/src/slurm-contribs-{{ slurm_version}}-1.el7.x86_64.rpm"
      - "/usr/local/src/slurm-perlapi-{{ slurm_version}}-1.el7.x86_64.rpm"
    state: present
    use_backend: yum

- name: create state save location   
  file: path={{ state_save_location }} state=directory owner=slurm group=slurm mode=0755

- name: secure the database and create slurm_acct_db
  script: secure_database.sh
  args:
    creates: /etc/my.cnf.d/innodb.cnf

- name: creat /etc/slurm dir
  file: path=/etc/slurm state=directory owner=root group=root mode=0755

- name: copy slurmdbd conf file   
  copy: src=slurmdbd.conf dest=/etc/slurm/slurmdbd.conf mode=0644  
  notify:  
    - restart_slurmdbd

- name: put in slurm conf file from template  
  template: src=slurm.conf.{{inventory_hostname}}.j2 dest=/etc/slurm/slurm.conf mode=0644  
  notify:  
    - restart_slurmctld 

- name: fetch slurm.conf to ansible host
  fetch: src=/etc/slurm/slurm.conf dest={{role_path}}/files/slurm.conf.{{inventory_hostname}} flat=yes

- name: start slurmdbd service   
  service: name=slurmdbd state=started enabled=yes

- name: start slurmctld service   
  service: name=slurmctld state=started enabled=yes



